#!/usr/bin/env node
"use strict";function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i < arr.length;i++) arr2[i] = arr[i];return arr2;}else {return Array.from(arr);}}var sslinfo=require("sslinfo");var chalk=require("chalk");var tlsHandshake=require("./tls/tls-handshake");var ciphers=require("../ciphers.json");var cipherIDs=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=ciphers[Symbol.iterator](),_step;!(_iteratorNormalCompletion = (_step = _iterator.next()).done);_iteratorNormalCompletion = true) {var cipher=_step.value;cipherIDs.push.apply(cipherIDs,_toConsumableArray(cipher.id));}}catch(err) {_didIteratorError = true;_iteratorError = err;}finally {try{if(!_iteratorNormalCompletion && _iterator["return"]){_iterator["return"]();}}finally {if(_didIteratorError){throw _iteratorError;}}}function getCipherName(id){var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=ciphers[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done);_iteratorNormalCompletion2 = true) {var cipher=_step2.value;if(cipher.id[0] == id[0] && cipher.id[1] == id[1]){return cipher.name;}}}catch(err) {_didIteratorError2 = true;_iteratorError2 = err;}finally {try{if(!_iteratorNormalCompletion2 && _iterator2["return"]){_iterator2["return"]();}}finally {if(_didIteratorError2){throw _iteratorError2;}}}}var host=process.argv[2];tlsHandshake(host,cipherIDs,"TLSv1.0").then(function(msg){console.log("Server supports " + msg.tlsVersion + " with cipher suite " + getCipherName(msg.cipherSuite));})["catch"](function(e){console.error("Error:");console.error(e);});